You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.

Print 1 if you can reach the last index, or 0 otherwise.



Input Format:

First line - n, the size of array

Second line - all the n elements



Output Format:

Print 1 if you can reach the last index, or 0 otherwise.



Sample Input:

5

2 3 1 1 4



Sample Output:

1



Explanation:

Jump 1 step from index 0 to 1, then 3 steps to the last index.

==================================================================

import java.util.Scanner;

public class JumpGame {

    public static int canReachLastIndex(int[] nums, int n) {
        int maxReach = 0;

        for (int i = 0; i < n; i++) {
            if (i > maxReach) {
                return 0; // If current index is beyond the maximum reachable index, return 0
            }
            maxReach = Math.max(maxReach, i + nums[i]);
        }

        return 1; // If the loop completes, it means the last index is reachable
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Input size of array
        int n = sc.nextInt();

        // Input elements of the array
        int[] nums = new int[n];
        for (int i = 0; i < n; i++) {
            nums[i] = sc.nextInt();
        }

        // Check if we can reach the last index and print the result
        System.out.println(canReachLastIndex(nums, n));

        sc.close();
    }
}


